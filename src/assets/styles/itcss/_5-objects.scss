/*
5. OBJECTS:

Cosmetic-free design patterns
class selectors which define undecorated
design patterns, like the media object
from OOCSS.
*/

/*------------------------------------*\
  #Layout class selectors
\*------------------------------------*/

.flex-container {
  display: flex;
  flex-direction: column;

  @media (min-width: $phoneWidth) {
    flex-direction: row;
  }
}

.two-columns {
  width: 100%;

  @media (min-width: $phoneWidth) {
    width: 45%;
  }
}

.three-columns {
  width: 100%;

  @media (min-width: $phoneWidth) {
    width: 30%;
  }
}

.multi-columns {
  justify-content: space-between;
}

.centered {
  align-items: center;
  justify-content: center;
  text-align: center;
}

.no-margin {
  margin: 0;
}

.no-padding {
  padding: 0;
}

.skeleton-container {
  position: relative;
  width: 100%; /* this is what will set the width of the content */

  .skeleton-overlay {
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    border: none;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    //background-color: rgba(013, 130, 230, 0.5);

    /*
    mat-spinner {
      background-color: aqua;
    }
    */
  }

  .skeleton-content {
    width: 100%;
  }
}

/*
Users of OOCSS will be familiar with the concept
of objects. This is the first layer in which we
find class-based selectors. These are concerned with
styling non-cosmetic design patterns, or 'objects'.
Objects can range from something as simple as a .wrapper
element, to layout systems, through to things like the
OOCSS poster child â€“ the Media Object. This layer affects
less of the DOM than the last layer, has a higher specificity,
and is slightly more explicit in that we are now targeting
sections of the DOM with classes.
*/
